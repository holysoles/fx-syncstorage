# Default values for fx-syncstorage.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/porelli/firefox-sync
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# A serviceAccount is created to process automatic credentials if the mysql subcharts are used
serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- Service type for the syncstorage service.
  type: ClusterIP
  # -- Port for the service to listen on.
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  # -- deploy an ingress as part of the chart
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: fx-syncstorage.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: fx-syncstorage-tls
  #    hosts:
  #      - fx-syncstorage.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /__heartbeat__
    port: 8000
readinessProbe:
  httpGet:
    path: /__heartbeat__
    port: 8000

# -- Additional volumes on the syncstorage Deployment.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the syncstorage Deployment.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- node selector to apply to the syncstorage Deployment.
nodeSelector: {}

# -- tolerations to apply to the syncstorage Deployment.
tolerations: []


# -- affinity for the syncstorage Deployment.
affinity: {}

syncstorage:
  # -- The URL at which the storagesync server will be available. Must be set.
  domain: ""
  # -- IP to listen on.
  host: 0.0.0.0
  # -- The maximum amount of users that are allowed to store data on the server.
  maxUsers: 1
  # -- Whether or not to log in a human readable format
  humanLogs: 1
  # -- Whether or not to persist generated secret objects even after a helm uninstall.
  keepGeneratedSecrets: false
  # -- A master secret can be specified here. If empty, one will be autogenerated.
  masterSecret: ""
  syncserver:
    # -- URL for connecting to the syncserver DB. If empty, will be autogenerated based on the bundled mysql instance.
    databaseUrl: ""
  tokenserver:
    # -- URL for connecting to the tokenserver DB. If empty, will be autogenerated based on the bundled mysql instance.
    databaseUrl: ""
    # -- Whether or not to run db migration tasks on startup.
    runMigrations: true
    # -- The database node type.
    nodeType: mysql
    # -- Auth Provider Domain
    fxaEmailDomain: api.accounts.firefox.com
    # -- OAuth Provider URL
    fxaOauthServerUrl: https://oauth.accounts.firefox.com/v1
    # -- A secret for hashing metrics for Sentry can be specified here. If empty, one will be autogenerated. Sentry should be automatically disabled on self-hosted instances.
    fxaMetricsHashSecret: ""
    additionalBlockingThreadsForFxaRequests: 2
  # -- Rust log level
  rustLogLevel: info

syncserverdb:
  # -- Enable the bundled [mysql subchart from bitnami](https://github.com/bitnami/charts/tree/main/bitnami/mysql) for the sync server DB.
  enabled: true
  architecture: standalone
  auth:
    database: "syncstorage"
    username: "syncuser"
    # -- Specify an existing secret for credentials. The default will auto-generate credentials.
    existingSecret: autogenerated-fx-syncserverdb
  primary:
    persistence:
      enabled: true
      storageClass: ""
      size: 4Gi
  # -- MySQL secondary additional command line flags
  extraFlags:
    - "--explicit_defaults_for_timestamp"

tokenserverdb:
  # -- Enable the bundled [mysql subchart from bitnami](https://github.com/bitnami/charts/tree/main/bitnami/mysql) for the token server DB.
  enabled: true
  architecture: standalone
  auth:
    database: "tokenserver"
    username: "tokenuser"
    # -- Specify an existing secret for credentials. The default will auto-generate credentials.
    existingSecret: autogenerated-fx-tokenserverdb
  primary:
    persistence:
      enabled: true
      storageClass: ""
      size: 4Gi
  # -- MySQL secondary additional command line flags
  extraFlags:
    - "--explicit_defaults_for_timestamp"
